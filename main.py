import datetime
import re

from aiogram import Bot, types  # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å telegram
# from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
# from aiogram.bot import api
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor

from db import Create_database, Verification, Join  # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–æ–¥—É–ª–µ–π
#from telegramcalendar import create_calendar
from config import BOT_TOKEN

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

Create_database()


@dp.message_handler(commands=['start'])
async def start_message(message: types.Message):
    user_id = message.from_user.id  # —Å—á–∏—Ç—ã–≤–∞–Ω–∏–µ id
    if Verification(user_id):
        await bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, –º—ã —Å —Ç–æ–±–æ–π —É–∂–µ —Ä–∞–±–æ—Ç–∞–ª–∏ —Ä–∞–Ω—å—à–µ.\n–í–∞—à–∏ –∑–∞–ø–∏—Å–∏ —Å–æ—Ö—Ä–∞–Ω–∏–Ω—ã.')
    else:
        if message.from_user.first_name != 'None':  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∏–º–µ–∏, —Ñ–∞–º–∏–ª–∏–∏ –∏ —é–∑–µ—Ä–Ω–µ–π–º–∞
            name = message.from_user.first_name
        elif message.from_user.username != 'None':
            name = message.from_user.username
        elif message.from_user.last_name != 'None':
            name = message.from_user.last_name
        else:
            name = ''
        Join(user_id, name)
        await bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAIEqF5VL5ozeLnmwSaOJAbKQDQAAfidjQACYwkAAgk7OxMAAVFVxKRh8u0YBA')
        await bot.send_message(message.chat.id, '–≠—Ç–æ—Ç –±–æ—Ç –Ω—É–∂–µ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–º–µ—Ç–æ–∫.\n'
                                                '–û–Ω –º–æ–∂–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –≤–∞—à–∏ –∑–∞–º–µ—Ç–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è.\n'
                                                '–î–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∏–º –Ω–µ –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è,\n'
                                                '–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∑–∞–ø–∏—Å–∏ –∏ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.\n'
                                                '–ß—Ç–æ–±—ã –≥–ª—É–±–∂–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /commands')

    await bot.send_message(message.chat.id, '–∂–¥—É —Ç–≤–æ–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è üïê')
    #first = datetime.datetime.now().time()
    #await bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text='–∂–¥—É —Ç–≤–æ–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è üïë')

    #keyboard = types.InlineKeyboardMarkup()
    #button1 = types.InlineKeyboardButton(text='–î–∞', callback_data='–¥–∞')
    #button2 = types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='–Ω–µ—Ç')
    #keyboard.add(button1, button2)
    #await bot.send_message(message.chat.id, '–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É?', reply_markup=keyboard)


@dp.message_handler(content_types=['text'])
async def get_info(message: types.Message):
    pattern_date = r'\d{2}-\d{2}-\d{4}'
    pattern_today = r'—Å–µ–≥–æ–¥–Ω—è'                      # date
    pattern_tomorrow = r'–∑–∞–≤—Ç—Ä–∞'
    pattern_day_after_tomorrow = r'–ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞'
    pattern_time = r' —á–∞—Å'                          # hour
    when = re.findall(pattern, string)
    await bot.send_message(message.chat.id, '–Å')
    

@dp.message_handler(content_types=['photo'])
async def get_photo(message: types.Message):
    await bot.send_message(message.chat.id, '–ö–†–ê–°–û–¢–ê üòçüòçüòç')


@dp.callback_query_handler(lambda call: True)
async def callback_inline(call):
    if call.data == '–¥–∞':
        bot.edit_message_text(inline_message_id=call.inline_message_id,
                              text='–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫ —á–∞—Å—Ç–æ –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ')
    elif call.data == '–Ω–µ—Ç':
        bot.edit_message_text(inline_message_id=call.inline_message_id,
                              text='–•–æ—Ä–æ—à–æ, –∫–æ–≥–¥–∞ –∑–∞—Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É - /add')


@dp.message_handler(commands=['calendar'])
async def get_calendar(message):
    now = datetime.datetime.now()   # –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞
    print(datetime.datetime.now())
    chat_id = message.chat.id
    date = (now.year, now.month)
    # current_shown_dates = {}
    # current_shown_dates[chat_id] = date #–°–æ—Ö—Ä–∞–Ω–∏–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –≤ —Å–ª–æ–≤–∞—Ä—å
    keyboard = create_calendar(now.year, now.month)
    await bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É', reply_markup=keyboard)
    print('5*****\n')
    # bot.answer_callback_query(call.id, text='–î–∞—Ç–∞ –≤—ã–±—Ä–∞–Ω–∞')


@dp.message_handler(commands=['today'])
async def today(message: types.Message):
    await bot.send_message(message.chat.id, '—Å–ø–∏—Å–æ–∫ –¥–µ–Ω—å –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n\n')


@dp.message_handler(commands=['commands'])
async def list_commands(message: types.Message):
    await bot.send_message(message.chat.id,
                           '–ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–≤–µ—á–∞–µ—Ç –±–æ—Ç:\n\n'
                           '/add - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å\n'
                           '/info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n'
                           '/contacts - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–∑–¥–∞—Ç–µ–ª—è—Ö –∏ –∫–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º—ã\n')


@dp.message_handler(commands=['info'])
async def give_info(message: types.Message):
    await bot.send_message(message.chat.id, '[–û –±–æ—Ç–µ]\n–≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ–ª.'
                                            '–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ –∑–∞–º–µ—Ç–∫–∏.'
                                            '–í —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –≤–∞–º –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.\n'
                                            '–¢–∞–∫–∂–µ –∫–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ Github')


@dp.message_handler(commands=['contacts'])
async def contacts(message: types.Message):
    keyboard = types.InlineKeyboardMarkup()
    url_button = types.InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ GitHub', url='https://github.com/DONSIMON92/bot-organizer')
    keyboard.add(url_button)
    await bot.send_message(message.chat.id, '–ü—Ä–æ–µ–∫—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ GitHub', reply_markup=keyboard)

if __name__ == '__main__':  # –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ –±–æ—Ç–∞
    executor.start_polling(dp)
